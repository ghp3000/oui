import{_ as o,r as c,o as i,c as p,b as n,a,e as t,d as e}from"./app.9299992b.js";const l={},u=t(`<h1 id="lua-api" tabindex="-1"><a class="header-anchor" href="#lua-api" aria-hidden="true">#</a> Lua API</h1><p>In Oui, Lua API are organized as <code>module-methods</code>.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>root@OpenWrt:~<span class="token comment"># ls /usr/share/oui/rpc/</span>
acl.lua       network.lua   ubus.lua      ui.lua        wireless.lua
demo.lua      system.lua    uci.lua       user.lua
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Each Lua file here represents a module. Module name is Lua file name(without suffix).</p><p>Each Lua API file needs to return a <code>Lua Table</code>, which consists of multiple <code>Lua functions</code>.</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token comment">-- /usr/share/oui/rpc/test.lua</span>

<span class="token keyword">local</span> M <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">--[[
param: Parameters passed by the front-end call
section: The login session information is a Table.
         Contains the currently logged in username (username) and the permission group (acl) to which it belongs.
--]]</span>
<span class="token keyword">function</span> M<span class="token punctuation">.</span><span class="token function">func1</span><span class="token punctuation">(</span>param<span class="token punctuation">,</span> section<span class="token punctuation">)</span>
    <span class="token keyword">local</span> res <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">...</span>
    <span class="token keyword">return</span> res
<span class="token keyword">end</span>

<span class="token keyword">return</span> M
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$oui</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;func1&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="reference-data" tabindex="-1"><a class="header-anchor" href="#reference-data" aria-hidden="true">#</a> Reference data</h2>`,8),r={href:"https://openwrt.org/docs/techref/uci#lua_bindings_for_uci",target:"_blank",rel:"noopener noreferrer"},d=e("lua-uci"),k={href:"https://github.com/openresty/lua-nginx-module",target:"_blank",rel:"noopener noreferrer"},v=e("lua-nginx-module"),m={href:"https://github.com/mpx/lua-cjson",target:"_blank",rel:"noopener noreferrer"},h=e("lua-cjson"),g=t(`<h2 id="delay-apply" tabindex="-1"><a class="header-anchor" href="#delay-apply" aria-hidden="true">#</a> Delay apply</h2><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token comment">-- The upgrade is delayed 0.5 seconds</span>
<span class="token keyword">function</span> M<span class="token punctuation">.</span><span class="token function">sysupgrade</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span>
    ngx<span class="token punctuation">.</span>timer<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">local</span> arg <span class="token operator">=</span> param<span class="token punctuation">.</span>keep <span class="token keyword">and</span> <span class="token string">&#39;&#39;</span> <span class="token keyword">or</span> <span class="token string">&#39;-n&#39;</span>
        os<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token string">&#39;sysupgrade &#39;</span> <span class="token operator">..</span> arg <span class="token operator">..</span> <span class="token string">&#39; /tmp/firmware.bin&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">end</span><span class="token punctuation">)</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="logging" tabindex="-1"><a class="header-anchor" href="#logging" aria-hidden="true">#</a> Logging</h2><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>ngx<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ngx<span class="token punctuation">.</span>ERR<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; world&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; nginx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; ok&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="turn-off-the-lua-code-cache" tabindex="-1"><a class="header-anchor" href="#turn-off-the-lua-code-cache" aria-hidden="true">#</a> Turn off the Lua code cache</h2><p>During debugging, the Lua code cache function of <code>Lua-nginx</code> module can be turned off to facilitate debugging.</p><p>Modify <code>/etc/nginx/conf.d/oui.conf</code></p><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">gzip_static</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span>
<span class="token directive"><span class="token keyword">lua_shared_dict</span> nonces <span class="token number">16k</span></span><span class="token punctuation">;</span>
<span class="token directive"><span class="token keyword">lua_shared_dict</span> sessions <span class="token number">16k</span></span><span class="token punctuation">;</span>
<span class="token directive"><span class="token keyword">lua_code_cache</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line">\xA0</div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then execute <code>/etc/init.d/nginx reload</code></p>`,9);function b(f,_){const s=c("ExternalLinkIcon");return i(),p("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[d,a(s)])]),n("li",null,[n("a",k,[v,a(s)])]),n("li",null,[n("a",m,[h,a(s)])])]),g])}const x=o(l,[["render",b],["__file","lua-api.html.vue"]]);export{x as default};
